name: Deploy to VPS

on:
  push:
    branches: [main, master]
  workflow_dispatch:

jobs:
  deploy:
    runs-on: ubuntu-latest
    
    steps:
    - name: Deploy to VPS
      uses: appleboy/ssh-action@v0.1.5
      with:
        host: 83.228.207.79
        username: ubuntu
        key: ${{ secrets.SSH_PRIVATE_KEY }}
        port: 22
        script: |
          echo "üöÄ D√©ploiement de digiflow-agency.fr..."
          
          # Variables FIXES pour ce site
          PROJECT_DIR="/var/www/apps/digiflow-agency.fr"
          APP_NAME="digiflow-agency-fr"
          
          # V√©rifier que le dossier existe
          if [ ! -d "$PROJECT_DIR" ]; then
            echo "‚ùå Dossier non trouv√©: $PROJECT_DIR"
            exit 1
          fi
          
          cd "$PROJECT_DIR"
          
          # V√©rifier que c'est un repo git
          if [ ! -d ".git" ]; then
            echo "‚ùå Pas un repository git"
            exit 1
          fi
          
          # Sauvegarder les changements locaux
          git stash push -m "auto-deploy-$(date +%Y%m%d-%H%M%S)" --include-untracked || true
          
          # R√©cup√©rer les derniers changements
          git fetch origin
          
          # Reset sur la branche principale
          if git show-ref --verify --quiet refs/remotes/origin/main; then
            git reset --hard origin/main
          elif git show-ref --verify --quiet refs/remotes/origin/master; then
            git reset --hard origin/master
          else
            echo "‚ùå Aucune branche main/master trouv√©e"
            exit 1
          fi
          
          # Installer les d√©pendances
          if [ -f "pnpm-lock.yaml" ]; then
            echo "üì¶ Installation avec pnpm..."
            pnpm install --frozen-lockfile
          elif [ -f "package-lock.json" ]; then
            echo "üì¶ Installation avec npm ci..."
            npm ci
          elif [ -f "yarn.lock" ]; then
            echo "üì¶ Installation avec yarn..."
            yarn install --frozen-lockfile
          else
            echo "üì¶ Installation avec npm..."
            npm install
          fi
          
          # Build si n√©cessaire
          if grep -q '"build"' package.json; then
            echo "üî® Build de production..."
            if [ -f "pnpm-lock.yaml" ]; then
              pnpm build
            elif [ -f "yarn.lock" ]; then
              yarn build
            else
              npm run build
            fi
          fi
          
          # Red√©marrer PM2
          echo "üîÑ Red√©marrage de l'application PM2..."
          if pm2 describe "$APP_NAME" > /dev/null 2>&1; then
            pm2 restart "$APP_NAME"
            echo "‚úÖ Application red√©marr√©e"
          else
            echo "‚ö†Ô∏è Application PM2 non trouv√©e, tentative avec le script de d√©ploiement..."
            # Utiliser le script de d√©ploiement s'il existe
            DEPLOY_SCRIPT="/home/ubuntu/deploy-$APP_NAME.sh"
            if [ -f "$DEPLOY_SCRIPT" ]; then
              bash "$DEPLOY_SCRIPT"
            else
              echo "‚ùå Aucun script de d√©ploiement trouv√©"
              exit 1
            fi
          fi
          
          echo "‚úÖ D√©ploiement termin√© pour digiflow-agency.fr!"
          pm2 status "$APP_NAME"
